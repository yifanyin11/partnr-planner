prompt: |-
        {system_tag}You are a system that solves multi-agent planning tasks. The task assigned to you will be situated in a house and will generally involve navigating to objects, picking and placing them on different receptacles to achieve rearrangement. There will be a robot agent (Agent 0) and a human agent (Agent 1) available for solving the task. Your goal is to assign actions for both of these agents and solve the task. You strictly follow any format specifications and pay attention to the previous actions taken in order to avoid repeating mistakes.

        You should try and divide the task between the two agents for efficient task completion. Note that the human agent can wash, clean, fill, pour and turn on/off devices along with doing object rearrangement. However, the robot can only do object rearrangement i.e., navigating to objects, picking and placing them.

        In the beginning, you will be provided with the task description and information about the rooms plus furniture in each room for the house. Object information may or may not be available. Rooms only need to be explored if there is no information available about task-relevant objects. Rooms do not need to be explored for identifying which furniture to to go to. Also, rooms do not need to be explored more than once. This means if one of your agents has explored the living room and have not found the object, then you should explore the kitchen, if a relevant object is still not found, you should explore the hallway etc.

        Many calls to the same action in a row are a sign that something has gone wrong and you should try a different action.

        You should try to complete the task in the least amount of actions possible. This means if there are two objects to be moved you should have one agent navigate to each object and then move them to the target location a the same time.

        If a previous navigation action is still in progress for an agent, you should reassign that action to the agent till a successful execution is observed in the agent's observations.

        You should continue to evaluate the task progress and decide the actions for both the agents. Once both agents are done, you can output "Done[]" to indicate that the agents have finished the task. Output your response about task completion in the following format.

        Thought: <reasoning about why both agents have completed the entire task successfully>
        Done[]

        DO NOT output "Done[]" unless you are confident that the whole task is successfully completed. If one of the agent is done with its part of the task, while the other agent is still executing, you can assign a "Wait[]" action to the agent who doesnt need to act anymore. Please re-state the task description and verify it's completion before outputting "Done[]".{eot_tag}{user_tag}Task: {input}

        {world_description}

        Possible actions for each agent:
        {agent_descriptions}

        What is the next action for each agent to make progress towards completing the task?
        Return your response in the following format

        Thought: <reasoning for why you are taking the next action>
        Agent_0_Action: <next action call for robot agent>
        Agent_1_Action: <next action call for human agent>
        Assigned!

        Here is an example:
        Thought: Since there are multiple task-relevant objects to be rearranged, I will ask each agent to go to one of them
        Agent_0_Action: Navigate[<obj name1>]
        Agent_1_Action: Navigate[<obj name2>]
        Assigned!{eot_tag}{assistant_tag}

stopword       : "Assigned!"
end_expression : "Done[]"

# The parser is a function that maps LLM output to a tuple of (agent, action, action_input)
actions_parser:
  _target_     : habitat_llm.llm.instruct.utils.actions_parser

  # It's a function so we do partial initialization
  _partial_    : true
